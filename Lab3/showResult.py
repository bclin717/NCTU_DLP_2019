import matplotlib.pyplot as plt

results_rs18 = {
    'Test(w/o pretraining)': [73.35231316725978, 73.35231316725978, 73.35231316725978, 73.20996441281139,
                              73.35231316725978,
                              73.35231316725978, 73.35231316725978, 73.35231316725978, 73.35231316725978,
                              73.35231316725978],
    'Test(with pretrining)': [78.26334519572954, 78.71886120996442, 79.27402135231317, 79.87188612099644,
                              77.09608540925267,
                              78.84697508896797, 80.2846975088968, 80.0, 79.35943060498221, 80.14234875444839],
    'Train(w/o pretraining)': [73.35136481725328, 73.50795401971601, 73.50795401971601, 73.50439517420548,
                               73.50795401971601, 73.50795401971601,
                               73.50795401971601, 73.50795401971601, 73.50795401971601, 73.50795401971601],
    'Train(with pretrining)': [74.35140040570839, 77.29100679739493, 78.96366418733763, 79.83914018292467,
                               80.75020463361686,
                               81.10253033915798, 81.94241787963985, 82.18441937435496, 82.74315811950603,
                               83.3446030107833]
}

results_rs50 = {
    'Test(w/o pretraining) ': [68.66903914590748, 73.35231316725978, 73.35231316725978, 71.55871886120997,
                               73.01067615658363],
    'Test(with pretrining)': [77.60854092526691, 78.69039145907473, 78.49110320284697, 79.82918149466192,
                              79.40213523131672],
    'Train(w/o pretraining)': [72.35132922879818, 73.31933520765864, 73.49371863767394, 73.50083632869497,
                               73.50795401971601],
    'Train(with pretrining)': [74.72863802982313, 77.71806825865688, 79.09178262571622, 79.75728673618278,
                               80.42634969215986]
}


def showResult(title='', results=results_rs50):
    plt.figure(title, figsize=(15, 7))
    plt.title(title)
    plt.xlabel('Epoch')
    plt.ylabel('Accuracy(%)')
    plt.grid()
    for label, data in results.items():
        plt.plot(range(1, len(data) + 1), data, 'o-' if 'w/o' in label else '-', label=label)
    plt.legend(loc='best', fancybox=True, shadow=True)
    plt.show()


showResult(title='Result Comparison(ResNet18)', results=results_rs18)
showResult(title='Result Comparison(ResNet50)', results=results_rs50)
